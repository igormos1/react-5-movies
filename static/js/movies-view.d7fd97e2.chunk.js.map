{"version":3,"file":"static/js/movies-view.d7fd97e2.chunk.js","mappings":"4LAGe,SAASA,EAAeC,GACrC,OACEA,IACE,wBACGA,EAAKA,KAAKC,KAAI,YAA6B,IAA1BC,EAAyB,EAAzBA,GAAIC,EAAqB,EAArBA,eACpB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAArB,SAA4BC,KADrBD,U,oLCTfG,EAAU,mCAAhB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAuB,2DAAD,OACgCD,IAIxD,SAASY,EAAkBC,GAChC,OAAOZ,EAAuB,sCAAD,OACWY,EADX,oBAC8Bb,EAD9B,oBAKxB,SAASc,EAAkBD,GAChC,OAAOZ,EAAuB,sCAAD,OACWY,EADX,4BACsCb,EADtC,oBAKxB,SAASe,EAAkBF,GAChC,OAAOZ,EAAuB,sCAAD,OACWY,EADX,4BACsCb,EADtC,oBAKxB,SAASgB,EAAiBC,GAC/B,OAAOhB,EAAuB,yDAAD,OACuBD,EADvB,iCACuDiB,EADvD,kC,2HC7BhB,SAASC,IAAc,IAAD,EACnC,GAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAA6BC,EAAAA,EAAAA,MAArBC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,OAEdC,EAAc,MAEY,WAC5B,IAAMC,EAAYC,OAAOC,eAAeC,QAAQ,aAC5CH,EAAUI,SAAS,YACrBL,EAAcC,EAAUK,MAAM,KAKlCC,IAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMlB,EAAQS,EAAOO,MAAM,GACtBhB,IAGLD,EAAAA,EAAAA,IAAiBC,GAAOmB,KAAKf,KAC5B,CAACK,IAYJ,OACE,iCACE,kBAAMW,SAZW,SAAAC,GACnBA,EAAEC,iBACF,IAAMtB,EAAQqB,EAAEE,cAAcC,SAASxB,MAAMyB,MAAMC,OAC9C1B,IAGLK,EAAS,GAAD,OAAIG,EAAJ,mBAAuBR,IAC/BY,OAAOC,eAAec,QAAQ,YAA9B,UAA8CnB,EAA9C,mBAAiER,MAK/D,WACE,kBACE4B,KAAK,QACLC,aAAY,UAAEnB,SAAF,QAAiB,GAC7BoB,KAAK,UAEP,kBAAOA,KAAK,SAASL,MAAM,cAE5BtB,IAAU,SAAC,IAAD,CAAgBzB,KAAMyB,EAAO4B","sources":["components/MoviesLinkList/MoviesLinkList.jsx","services/movie-api.js","views/MoviesView/MoviesView.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport default function MoviesLinkList(data) {\n  return (\n    data && (\n      <ul>\n        {data.data.map(({ id, original_title }) => {\n          return (\n            <li key={id}>\n              <Link to={`/movies/${id}`}>{original_title}</Link>\n            </li>\n          );\n        })}\n      </ul>\n    )\n  );\n}\n\nMoviesLinkList.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","const API_KEY = 'bbe6ca7cc6c7a5ddd38cfa2cd00fb2a2';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrending() {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchMovieDetails(movieId) {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieCredits(movieId) {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieReviews(movieId) {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchSearchMovie(query) {\n  return fetchWithErrorHandling(`\n  https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`);\n}\n","import { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { fetchSearchMovie } from '../../services/movie-api.js';\nimport MoviesLinkList from '../../components/MoviesLinkList/MoviesLinkList';\n\nexport default function MoviesView() {\n  const [movies, setMovies] = useState(null);\n  const navigate = useNavigate();\n  const { pathname, search } = useLocation();\n\n  let searchQuery = null;\n\n  const setSearchQueryToValue = () => {\n    const prevRoute = window.sessionStorage.getItem('prevRoute');\n    if (prevRoute.includes('search')) {\n      searchQuery = prevRoute.slice(15);\n      //console.log(searchQuery);\n    }\n  };\n\n  setSearchQueryToValue();\n\n  useEffect(() => {\n    const query = search.slice(8);\n    if (!query) {\n      return;\n    }\n    fetchSearchMovie(query).then(setMovies);\n  }, [search]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const query = e.currentTarget.elements.query.value.trim();\n    if (!query) {\n      return;\n    }\n    navigate(`${pathname}?search=${query}`);\n    window.sessionStorage.setItem('prevRoute', `${pathname}?search=${query}`);\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input\n          name=\"query\"\n          defaultValue={searchQuery ?? ''}\n          type=\"text\"\n        ></input>\n        <input type=\"submit\" value=\"Search\" />\n      </form>\n      {movies && <MoviesLinkList data={movies.results} />}\n    </>\n  );\n}\n"],"names":["MoviesLinkList","data","map","id","original_title","to","API_KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrending","fetchMovieDetails","movieId","fetchMovieCredits","fetchMovieReviews","fetchSearchMovie","query","MoviesView","useState","movies","setMovies","navigate","useNavigate","useLocation","pathname","search","searchQuery","prevRoute","window","sessionStorage","getItem","includes","slice","setSearchQueryToValue","useEffect","then","onSubmit","e","preventDefault","currentTarget","elements","value","trim","setItem","name","defaultValue","type","results"],"sourceRoot":""}